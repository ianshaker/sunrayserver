// kalendar.js
const { createClient } = require('@supabase/supabase-js');

const SUPABASE_URL = 'https://xyzkneqhggpxstxqbqhs.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh5emtuZXFoZ2dweHN0eHFicWhzIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDY1NTE1MzIsImV4cCI6MjA2MjEyNzUzMn0.HmkcuxviENuQbiYgyQh0MBPr5zYlk88YLnRBlTXaKUU'; // —Å–≤–æ–π –∫–ª—é—á
const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

// –ú–∞—Å—Å–∏–≤ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ –∫–Ω–æ–ø–∫–∞–º
const MASTERS = [
  "–õ–ï–®–ê", "–ê–ù–¢–û–ù", "–†–û–ú–ê", "–¢–ò–ú–£–†", "–ï–í–ì–ï–ù–ò–ô", "–î–ò–ú–ê", "–ê–õ–ï–ö–°–ï–ô", "–í–Ø–ß–ï–°–õ–ê–í", "–°–ï–ú–Å–ù", "–í–õ–ê–î–ò–ú–ò–†"
];

// –ö–Ω–æ–ø–∫–∏ –¥–Ω–µ–π ‚Äî 9 –¥–Ω–µ–π –≤–ø–µ—Ä—ë–¥
function getDaysButtons() {
  const res = [];
  for (let i = 0; i < 9; i++) {
    const d = new Date();
    d.setDate(d.getDate() + i);
    const day = d.getDate();
    const month = d.toLocaleString('ru', { month: 'short' }); // '–∏—é–Ω.'
    res.push({ text: `${day} ${month}`, callback_data: `day_${i}` });
  }
  return res;
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é: –ö–∞–ª–µ–Ω–¥–∞—Ä—å
async function handleCalendarMenu(bot, chatId) {
  const mastersButtons = MASTERS.map(m => [{ text: m, callback_data: `master_${m}` }]);
  await bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏ –º–∞—Å—Ç–µ—Ä–∞:', {
    reply_markup: { inline_keyboard: mastersButtons }
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –º–∞—Å—Ç–µ—Ä–∞
async function handleMasterSelect(bot, chatId, master) {
  const daysBtns = getDaysButtons().map(btn => [btn]); // –ö–∞–∂–¥–∞—è –¥–∞—Ç–∞ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
  await bot.sendMessage(chatId, `–ú–∞—Å—Ç–µ—Ä: ${master}\n–í—ã–±–µ—Ä–∏ –¥–µ–Ω—å:`, {
    reply_markup: { inline_keyboard: daysBtns }
  });
}

// –ü–æ–ª—É—á–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–∞ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –¥–µ–Ω—å
async function handleDaySelect(bot, chatId, master, dayOffset) {
  const d = new Date();
  d.setDate(d.getDate() + dayOffset);
  const targetDate = d.toISOString().slice(0, 10); // "2025-06-01"
  const { data, error } = await supabase
    .from('eventsnew')
    .select('start_time, end_time, type, dialog')
    .eq('master', master)
    .eq('date', targetDate);

  if (error) {
    await bot.sendMessage(chatId, '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è!');
    return;
  }

  if (!data || !data.length) {
    await bot.sendMessage(chatId, `–£ –º–∞—Å—Ç–µ—Ä–∞ ${master} –Ω–∞ ${targetDate} –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π.`);
    return;
  }

  let text = `üìÖ <b>–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ ${master} –Ω–∞ ${targetDate}:</b>\n\n`;
  for (const ev of data) {
    const st = ev.start_time?.slice(0,5) || "";
    const et = ev.end_time?.slice(0,5) || "";
    text += `‚è∞ <b>${st}‚Äì${et}</b> ‚Äî <i>${ev.type || "–°–æ–±—ã—Ç–∏–µ"}</i>\n`;
    if (ev.dialog) text += `–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${ev.dialog.substring(0, 40)}\n`;
    text += '\n';
  }
  await bot.sendMessage(chatId, text, { parse_mode: "HTML" });
}

// –ì–ª–∞–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫: –ø–æ–¥–∫–ª—é—á–∏—Ç—å –≤ index.js –∏–ª–∏ server.js
function registerCalendarBot(bot) {
  // –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ –∫–æ–º–∞–Ω–¥–µ "/calendar" –∏–ª–∏ "–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π"
  bot.onText(/\/calendar|–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π/i, (msg) => {
    handleCalendarMenu(bot, msg.chat.id);
  });

  // Inline-–∫–Ω–æ–ø–∫–∏
  bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    if (query.data.startsWith('master_')) {
      const master = query.data.replace('master_', '');
      bot.session = bot.session || {};
      bot.session[chatId] = { master };
      await handleMasterSelect(bot, chatId, master);
      await bot.answerCallbackQuery(query.id);
    }
    if (query.data.startsWith('day_')) {
      const dayOffset = Number(query.data.replace('day_', ''));
      const master = bot.session?.[chatId]?.master;
      if (!master) {
        await bot.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –º–∞—Å—Ç–µ—Ä–∞!');
        return;
      }
      await handleDaySelect(bot, chatId, master, dayOffset);
      await bot.answerCallbackQuery(query.id);
    }
  });
}

module.exports = { registerCalendarBot };